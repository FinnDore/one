@tailwind base;
@tailwind components;
@tailwind utilities;

.noise::after {
    background-repeat: repeat;
    pointer-events: none;
    content: ' ';
    background-image: url(/NOISE.webp);
    background-position: 0 0;
    background-size: 150px;
    opacity: 0.2;
    left: 0;
    top: 0;
    width: 100%;
    display: block;
    position: absolute;
    height: 100%;
}

@media (prefers-color-scheme: light) {
    .noise::after {
        filter: invert(1);
    }
}

@keyframes pulse {
    0% {
        opacity: 0.9;
        transform: scale(0.97);
    }
    50% {
        opacity: 1;
        transform: scale(1);
    }
    100% {
        opacity: 0.9;
        transform: scale(0.97);
    }
}

.center-abs {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

.add-light-bg-gradient {
    width: 24.4375rem;
    height: 31.3125rem;
    background: conic-gradient(
        from 90deg at 20% 20%,
        rgba(255, 255, 255, 0) 110.62499642372131deg,
        rgba(161, 161, 161, 0.38) 206.25000715255737deg,
        rgba(255, 255, 255, 0.3) 333.7499928474426deg
    );
    filter: blur(100px);
}

.add-light-bg {
    opacity: 0.82;
    background: conic-gradient(
        from 43deg at 55.2% 53.52%,
        rgba(223, 223, 223, 0) 110.62499642372131deg,
        rgba(220, 217, 225, 0.05) 183.23912143707275deg,
        rgba(250, 250, 250, 0.08) 206.25000715255737deg,
        rgba(223, 223, 223, 0.06) 308.52407455444336deg,
        rgba(219, 216, 225, 0.06) 333.7499928474426deg
    );
    filter: blur(30px);
}

.add-light-inner-shadow {
    box-shadow: 0px 0px 12px 0px #fff inset;
}
